// room script file
function hRedStone_Look()
{
  cEgo.Say("A red stone!");
  if(global_bool_fake_cursor)
  {
    global_bool_fake_cursor = false;
    ArrowSelect.UseMouseAsOrigin = true;
    ArrowSelect.enableKeyboardArrows(true);
  }
  else 
  {
    global_bool_fake_cursor = true;
    ArrowSelect.UseMouseAsOrigin = false;
    ArrowSelect.enableKeyboardArrows(false);
  }
}

void _doFakeClick()
{
  if(GUI.GetAtScreenXY(gFakeCursor.X, gFakeCursor.Y) != null)
  {
    GUI.ProcessClick(gFakeCursor.X, gFakeCursor.Y, eMouseLeft);
  }
  else 
  {
    Room.ProcessClick(gFakeCursor.X, gFakeCursor.Y, mouse.Mode);
  }
}

function on_key_press(eKeyCode keycode) 
{
  if(!global_bool_fake_cursor) return;
  
  if(keycode == eKeyReturn) 
  {
    _doFakeClick();
    return;
  }
  
  Interactive* interactive;
  Point* p;
    
  p = new Point;
  p.x = gFakeCursor.X;
  p.y = gFakeCursor.Y;
  ArrowSelect.Origin = p;
  
  if (keycode == eKeyDownArrow) {
    interactive = ArrowSelect.getNearestInteractiveAtDirection(eDirectionDown);
  } else if (keycode == eKeyUpArrow) {
    interactive = ArrowSelect.getNearestInteractiveAtDirection(eDirectionUp);
  } else if (keycode == eKeyLeftArrow) {
    interactive = ArrowSelect.getNearestInteractiveAtDirection(eDirectionLeft);
  } else if (keycode == eKeyRightArrow) {
    interactive = ArrowSelect.getNearestInteractiveAtDirection(eDirectionRight);
  } else return;
  
  if(interactive == null) return;
    
  gFakeCursor.X = interactive.x;
  gFakeCursor.Y = interactive.y;
}

function hBlueShip_Look()
{
  cEgo.Say("My blue ship!");
}
